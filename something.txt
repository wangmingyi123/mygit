1、创建一个本地库。
     mkdir  库名 （要求库名与GitHub库名一致）
     cd  库名
     git init

2、配置个人信息。
     git  config  --global  user.name  "your  name"  (“your name” 与GitHub 名相同）
     git  config  --global  user.email   "your  email"  ( "your email"  与GitHub邮箱相同)

3、创建密匙。
     ssh-keygen  -t  rsa  -C  "your email"
     .ssh文件可以在命令行创建，Git Bash命令中多次enter。公共密匙在id_rsa.pub文件中。在GitHub中右上角+，New  Repository，创建线上
     仓库，仓库名与本地仓库名一致，勾选readme选项。右上角setting，进入SSH  and  GPG  keys，复制SSH。
    
    Git Bash键入  ssh  -T  git@github.com 检查是否成功，收到成功提示  You've successfully authenticated, but GitHub does not provide shell access。

4、关联两个仓库
     git  remote  add  origin  git@github.com:（GitHub名）/（仓库名）.git

5、存文件到GitHub
     创建要保存的文件名，键入命令：
     git  add  文件名
     git  commit  -m  "描述（wrote  a  test  file!）"
     使用命令git  status 查看文件状态，显示提示说明成功保存到git：
     On branch master
     nothing to commit, working directory clean

6、本地仓库与线上仓库同步
     由于GitHub上的仓库创建了README.md，本地没有，导致两个仓库不同步,所以键入命令：
     git  pull  --rebase  origin  master
     键入命令之前，先用命令关联本地仓库和线上仓库：git  remote  add  origin  git@github.com:（GitHub名）/（仓库名）.git
     出现成功提示：
     warning: no common commits
     remote: Counting objects: 3, done.
     remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
     Unpacking objects: 100% (3/3), done.
     From github.com:jo-qzy/mygit
     * branch            master     -> FETCH_HEAD
     * [new branch]      master     -> origin/master
     First, rewinding head to replay your work on top of it...
     Applying: wrote a test file!
     合并结果在本地，键入命令：
     git  push  -u  origin  master
     使用git  status查看状态，在GitHub上查看是否有文件名。

7、clone代码
     Git  Bash或者cmd中键入命令：
     git clone SSH/HTTP

8、更新代码
     键入命令：git  add  *（*表示更新全部）
     接着键入：git  commit  -m  "更新说明"，提交到缓存区
     多人开发：git  pull
     最后键入命令：git  push  origin  master

9、删除
     键入命令：git  rm  文件名
     提交远程GitHub：git push origin master

参考资料来自：
          https://blog.csdn.net/Boring_Wednesday/article/details/78651631
          https://www.cnblogs.com/R-bear/p/7532264.html





     